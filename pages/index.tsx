import Card from 'components/card'
import FormProduct from 'components/formProduct'
import Layout from 'components/layout'
import Modal from 'components/modal/Modal'
import SkeletonLoader from 'components/skeleton'
import { Irules, Table } from 'components/table'
import Product from 'domain/model/Product'
import type { NextPage } from 'next'
import Head from 'next/head'
import { useState } from 'react'
import styles from '../styles/Home.module.css'
import useHomeModel from './Home.model'

const rules = [
  {
    name: "Sku",
    data: "sku"
  },
  {
    name: 'Product Name',
    data: "product_name"
  }
]

const Home: NextPage = () => {

  const { productList, loadingList, errorList, isVisibleModal, toggleModal, loadingAdd, isUpdate, form,
    onSearch,
    onAddProduct,
onUpdateProduct,
onChangeForm,
onEdit,
loadingDetail
  } = useHomeModel()
  // console.log(useHomeModel())

  const [search, setSearch] = useState<string>()
  const setupData = productList?.filter((item: Product) => {
    return !item.sku.search(search!) 
  })

  return (
    <div className={styles.container}>
      <Head>
        <title>Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Layout>
        <Card>
          <div className={styles.header_table}>
            <input type={'input'} placeholder="Search" onChange={(e) => setSearch(e.target.value)}/>
            <button className={styles.add_product} onClick={toggleModal}>Add Product</button>
          </div>
          <Table 
            rules={rules}
            data={setupData}
            isLoading={loadingList}
            renderRowRight={(rules: Irules[], data: any) => {
              return (
                <div className={styles.execution}>
                  <span className={styles.button_execution} onClick={() => onEdit(data?.sku)}>Edit</span>
                  <span className={styles.button_execution} onClick={() => alert("endpoint tidak tersedia")}>Delete</span>
                </div>
              )
            }}
          />
        </Card>
      </Layout>
      <Modal visible={isVisibleModal} onClose={toggleModal}>
        <FormProduct 
          isUpdate={isUpdate} 
          form={form!}
          isLoading={loadingAdd || loadingDetail} 
          onAdd={onAddProduct}
          onUpdate={onUpdateProduct}
          onChange={onChangeForm}
        />
      </Modal>
    </div>
  )
}

export default Home
